@startuml

title "Cloud Traxsense Architecture"

skinparam interface {
  backgroundColor Grey
  borderColor black
}

skinparam component {
  BackgroundColor white
}

skinparam database {
  BackgroundColor white
}

package "Cloud" {
database "Managed Traxsense DaaS"
package "K8s" {
    package "Client #1 Group" {
        [Client #1 MQTT Broker] <-up-> [Client #1 Event Bridge] : MQTT (QoS 2)
        [Client #1 Event Bridge] <-up-> [Managed Traxsense DaaS] : Event Data
        [Client #1 Traxsense] <-up-> [Managed Traxsense DaaS] : Reports, Data
        [Client #1 Traxsense] <--> [Client #1 Metabase]
        [Client #1 Metabase] <-up-> [Managed Traxsense DaaS]
    }
    package "Client #2 Group" {
        [Client #2 MQTT Broker] <-up-> [Client #2 Event Bridge] : MQTT (QoS 2)
        [Client #2 Event Bridge] <-up-> [Managed Traxsense DaaS] : Event Data
        [Client #2 Traxsense] <-up-> [Managed Traxsense DaaS] : Reports, Data
        [Client #2 Traxsense] <--> [Client #2 Metabase]
        [Client #2 Metabase] <--> [Managed Traxsense DaaS]
    }
    
    [Load balancer] <-up-> [Client #1 Traxsense] : HTTP, \nWebSockets
    [Load balancer] <-up-> [Client #2 Traxsense] : HTTP, \nWebSockets
    [Load balancer] <-up-> [Client #1 Metabase] : HTTP
    [Load balancer] <-up-> [Client #2 Metabase] : HTTP
    }
}

package "Client #1"{
[Client #1 ERP] <--> [Client #1 Middleware (Optional)]
[Client #1 Middleware (Optional)] <-down-> [Load balancer]
}

package "Client #2"{
[Client #2 ERP] <--> [Client #2 Middleware (Optional)]
[Client #2 Middleware (Optional)] <-left-> [Load balancer]
}

Networked_IoT_Device <-up-> [Load balancer] : MQTT (QoS 2), \nTCP
User <-up-> Browser
User <-up-> Handheld

Handheld <-up-> [Load balancer] : HTTPS,\nREST,\nWebSockets
Browser <-up-> [Load balancer] : HTTPS,\nREST,\nWebSockets
Browser <-up-> [Load balancer] : HTTPS,\niFrame

@enduml